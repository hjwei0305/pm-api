
package com.donlim.pm.webservice.eip;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 *
 */
@WebServiceClient(name = "CheckSearchSevice", targetNamespace = "urn:DefaultNamespace", wsdlLocation = "http://bsappserver.donlim.com:80/bs/AssetManagerSystem.nsf/WSCHECKSEARCH?OpenWebService?wsdl")
public class CheckSearchSevice
    extends Service
{

    private final static URL CHECKSEARCHSEVICE_WSDL_LOCATION;
    private final static WebServiceException CHECKSEARCHSEVICE_EXCEPTION;
    private final static QName CHECKSEARCHSEVICE_QNAME = new QName("urn:DefaultNamespace", "CheckSearchSevice");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://bsappserver.donlim.com:80/bs/AssetManagerSystem.nsf/WSCHECKSEARCH?OpenWebService?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        CHECKSEARCHSEVICE_WSDL_LOCATION = url;
        CHECKSEARCHSEVICE_EXCEPTION = e;
    }

    public CheckSearchSevice() {
        super(__getWsdlLocation(), CHECKSEARCHSEVICE_QNAME);
    }

    public CheckSearchSevice(WebServiceFeature... features) {
        super(__getWsdlLocation(), CHECKSEARCHSEVICE_QNAME, features);
    }

    public CheckSearchSevice(URL wsdlLocation) {
        super(wsdlLocation, CHECKSEARCHSEVICE_QNAME);
    }

    public CheckSearchSevice(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, CHECKSEARCHSEVICE_QNAME, features);
    }

    public CheckSearchSevice(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CheckSearchSevice(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns CheckSearch
     */
    @WebEndpoint(name = "Domino")
    public CheckSearch getDomino() {
        return super.getPort(new QName("urn:DefaultNamespace", "Domino"), CheckSearch.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CheckSearch
     */
    @WebEndpoint(name = "Domino")
    public CheckSearch getDomino(WebServiceFeature... features) {
        return super.getPort(new QName("urn:DefaultNamespace", "Domino"), CheckSearch.class, features);
    }

    private static URL __getWsdlLocation() {
        if (CHECKSEARCHSEVICE_EXCEPTION!= null) {
            throw CHECKSEARCHSEVICE_EXCEPTION;
        }
        return CHECKSEARCHSEVICE_WSDL_LOCATION;
    }

}
